apiVersion: v1
kind: ConfigMap
metadata:
  name: watcher-code-snapshot-config
  namespace: watcher
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root /usr/share/nginx/html;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            charset utf-8;
            
            # CORS 설정 추가
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: watcher-code-snapshot
  namespace: watcher
spec:
  selector:
    matchLabels:
      app: watcher-code-snapshot
  replicas: 1
  template:
    metadata:
      labels:
        app: watcher-code-snapshot
    spec:
      containers:
      - name: nginx
        image: nginx:1.25
        ports:
        - containerPort: 80
        volumeMounts:
        - name: snapshot-volume
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: true
      volumes:
      - name: snapshot-volume
        persistentVolumeClaim:
          claimName: watcher-code-snapshot-pvc
      - name: nginx-config
        configMap:
          name: watcher-code-snapshot-config
---
apiVersion: v1
kind: Service
metadata:
  name: watcher-code-snapshot
  namespace: watcher
spec:
  selector:
    app: watcher-code-snapshot
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
