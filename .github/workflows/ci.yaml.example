name: üöÄ CI/CD - Build & Deploy

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'packages/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04
    
    env:
      HARBOR_REGISTRY: harbor.jbnu.ac.kr
      HARBOR_PROJECT: jinseok1006

    steps:
      - name: üìÇ Checkout code
        uses: actions/checkout@v4

      - name: üìÖ Get current date
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY.MM.DD

      - name: üè∑Ô∏è Generate version tag
        uses: actions/github-script@v7
        id: version
        with:
          result-encoding: string
          script: |
            const date = '${{ steps.current-time.outputs.formattedTime }}';
            const commit = context.sha.substring(0, 7);
            const version = `${date}-${commit}`;
            core.exportVariable('VERSION', version);
            return version;

      - name: üê≥ Login to Harbor Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: üìÇ Check changed files
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            procmon:
              - 'packages/procmon/**'
            filemon:
              - 'packages/filemon/**'

      - name: üî® Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest
          install: true
          use: true

      - name: üì¶ Build and Push Procmon
        if: steps.changes.outputs.procmon == 'true'
        id: build-procmon
        uses: docker/build-push-action@v5
        with:
          context: packages/procmon
          push: true
          tags: |
            ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/watcher-procmon:${{ env.VERSION }}
            ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/watcher-procmon:latest
          cache-from: type=registry,ref=${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/watcher-procmon:cache
          cache-to: type=registry,ref=${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/watcher-procmon:cache,mode=max

      - name: üì¶ Build and Push Filemon
        if: steps.changes.outputs.filemon == 'true'
        id: build-filemon
        uses: docker/build-push-action@v5
        with:
          context: packages/filemon
          push: true
          tags: |
            ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/watcher-filemon:${{ env.VERSION }}
            ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/watcher-filemon:latest
          cache-from: type=registry,ref=${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/watcher-filemon:cache
          cache-to: type=registry,ref=${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/watcher-filemon:cache,mode=max

      - name: ‚úÖ Build Summary
        run: |
          echo "üéØ Version: ${{ env.VERSION }}"
          echo "üìÇ Changed files:"
          echo "  - Procmon: ${{ steps.changes.outputs.procmon }}"
          echo "  - Filemon: ${{ steps.changes.outputs.filemon }}"
          
          if [[ "${{ steps.changes.outputs.procmon }}" == "true" ]]; then
            echo "‚úÖ Procmon built successfully"
          else
            echo "‚è≠Ô∏è Procmon skipped (no changes)"
          fi
          
          if [[ "${{ steps.changes.outputs.filemon }}" == "true" ]]; then
            echo "‚úÖ Filemon built successfully"
          else
            echo "‚è≠Ô∏è Filemon skipped (no changes)"
          fi